generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  id           String       @id @default(cuid())
  title        String
  description  String
  prepTime     String
  cookTime     String
  servings     Int
  instructions String[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  category     Category     @relation(fields: [categoryId], references: [id])
  categoryId   String
  ingredients  Ingredient[]
  user         User?        @relation(fields: [userId], references: [id])
  userId       String?
  image        Image?       @relation(fields: [imageId], references: [id])
  imageId      String?      @unique
}

model Image {
  id        String  @id @default(uuid())
  original  String
  optimized String
  small     String
  medium    String
  large     String
  Recipe    Recipe?
}

model Category {
  id      String   @id @default(cuid())
  name    String   @unique
  recipes Recipe[]
}

model Ingredient {
  id      String   @id @default(cuid())
  name    String
  amount  String
  unit    String?
  recipes Recipe[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  recipes       Recipe[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
